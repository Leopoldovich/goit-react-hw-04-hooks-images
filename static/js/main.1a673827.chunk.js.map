{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","services/api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Main/Main.jsx","App.js","index.js"],"names":["module","exports","page","perPage","query","url","axios","get","then","response","status","data","hits","length","Searchbar","onSetQuery","useState","setQuery","className","s","container","form","onSubmit","e","preventDefault","val","trim","type","button","icon","style","width","height","fill","input","value","name","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","webformatURL","largeImageURL","tags","myRef","onClickImg","imageItem","ref","onClick","src","image","alt","ImageGallery","itemsImg","imageGallery","map","el","idx","arr","id","Button","onClickMore","blockMore","override","css","Loader","color","loading","size","root","document","querySelector","Modal","item","onCloseModal","onCloseKey","code","useEffect","window","addEventListener","removeEventListener","createPortal","overlay","currentTarget","modal","Main","useRef","currentPage","setCurrentPage","setItemsImg","isLastPage","setIsLastPage","isLoading","setIsLoading","searchQuery","setSearchQuery","itemLooking","setItemLooking","clearData","API","toast","warn","Math","trunc","totalHits","current","top","offsetTop","scrollTo","behavior","scrollToRef","catch","error","message","dataset","prevState","App","theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a673827.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Searchbar_container__3RVJe\",\"form\":\"Searchbar_form__3VNO-\",\"input\":\"Searchbar_input__1MJzR\",\"button\":\"Searchbar_button__33CxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageItem\":\"ImageGalleryItem_imageItem__7Hq3x\",\"image\":\"ImageGalleryItem_image__3prD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3DcVk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3yGta\",\"modal\":\"Modal_modal__1Yx-r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__3L2lg\"};","import axios from \"axios\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"23908386-2e3165467d660ea2c64c020be\";\n\nconst getSearchImages = (page, perPage, query) => {\n  const url = `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=${perPage}&key=${API_KEY}`;\n  return axios.get(url).then((response) => {\n    if (response.status === 200 && response.data.hits.length !== 0) {\n      return response.data;\n    } else {\n      return null;\n    }\n  });\n};\n\nexport default { getSearchImages };\n","import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport ImageSearchIcon from '@mui/icons-material/ImageSearch'\nimport s from './Searchbar.module.css'\n\nfunction Searchbar({ onSetQuery }) {\n  const [query, setQuery] = useState('')\n\n  const onSubmitForm = (e) => {\n    e.preventDefault()\n    const val = query.trim()\n    if (val) {\n      onSetQuery(val)\n    }\n  }\n\n  return (\n    <header className={s.container}>\n      <form className={s.form} onSubmit={onSubmitForm}>\n        <button type=\"submit\" className={s.button}>\n          <ImageSearchIcon\n            className={s.icon}\n            style={{ width: '90%', height: '90%', fill: 'blue' }}\n          />\n        </button>\n\n        <input\n          className={s.input}\n          value={query}\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={(e) => {\n            setQuery(e.target.value)\n          }}\n        />\n      </form>\n    </header>\n  )\n}\n\nSearchbar.propTypes = {\n  onSetQuery: PropTypes.func.isRequired,\n}\n\nexport default Searchbar\n","import PropTypes from 'prop-types'\nimport s from './ImageGalleryItem.module.css'\n\nfunction ImageGalleryItem({\n  webformatURL,\n  largeImageURL,\n  tags,\n  myRef = null,\n  onClickImg,\n}) {\n  return (\n    <li\n      className={s.imageItem}\n      ref={myRef}\n      onClick={(e) => {\n        onClickImg(e.target)\n      }}\n    >\n      <img\n        src={webformatURL}\n        data-src={largeImageURL}\n        className={s.image}\n        alt={tags}\n      />\n    </li>\n  )\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onClickImg: PropTypes.func.isRequired,\n  myRef: PropTypes.object,\n}\n\nexport default ImageGalleryItem\n","import PropTypes from 'prop-types'\nimport s from './ImageGallery.module.css'\nimport ImageGalleryItem from '../ImageGalleryItem'\n\nexport default function ImageGallery({ itemsImg, myRef, onClickImg }) {\n  return (\n    <ul className={s.imageGallery}>\n      {itemsImg &&\n        itemsImg.map((el, idx, arr) => (\n          <ImageGalleryItem\n            key={el.id}\n            webformatURL={el.webformatURL}\n            largeImageURL={el.largeImageURL}\n            tags={el.tags}\n            myRef={idx === arr.length - 12 ? myRef : null}\n            onClickImg={onClickImg}\n          />\n        ))}\n    </ul>\n  )\n}\n\nImageGallery.propTypes = {\n  itemsImg: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  myRef: PropTypes.object,\n  onClickImg: PropTypes.func.isRequired,\n}\n","import PropTypes from 'prop-types'\nimport s from './Button.module.css'\n\nfunction Button({ onClickMore }) {\n  return (\n    <div className={s.blockMore}>\n      <button type=\"button\" className={s.button} onClick={onClickMore}>\n        Load more...\n      </button>\n    </div>\n  )\n}\n\nButton.propTypes = {\n  onClickMore: PropTypes.func.isRequired,\n}\n\nexport default Button\n","import { css } from '@emotion/react'\nimport CircleLoader from 'react-spinners/CircleLoader'\n\nconst override = css`\n  display: block;\n  margin: 10px auto;\n`\n\nfunction Loader() {\n  return (\n    <CircleLoader\n      color=\"rgb(6, 255, 247)\"\n      loading={true}\n      css={override}\n      size={50}\n    />\n  )\n}\n\nexport default Loader\n","import { useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport PropTypes from 'prop-types'\nimport s from './Modal.module.css'\n\nconst root = document.querySelector('#root-modal')\n\nexport default function Modal({ item, onCloseModal }) {\n  const onCloseKey = (e) => {\n    if (e.code === 'Escape') {\n      onCloseModal()\n    }\n  }\n\n  const onCloseBackdrop = (e) => {\n    if (e.target === e.currentTarget) {\n      onCloseModal()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', onCloseKey)\n    return () => {\n      window.removeEventListener('keydown', onCloseKey)\n    }\n  }, [])\n\n  const { src, tags } = item\n  return createPortal(\n    <div className={s.overlay} onClick={onCloseBackdrop}>\n      <div className={s.modal}>\n        <img src={src} alt={tags} />\n      </div>\n    </div>,\n    root,\n  )\n}\n\nModal.propTypes = {\n  item: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }),\n  onCloseModal: PropTypes.func.isRequired,\n}\n","import { useState, useEffect, useRef } from 'react'\nimport { toast } from 'react-toastify'\nimport API from '../../services/api'\nimport Searchbar from '../Searchbar'\nimport ImageGallery from '../ImageGallery'\nimport Button from '../Button'\nimport Loader from '../Loader'\nimport Modal from '../Modal'\n\nexport default function Main() {\n  const myRef = useRef(null)\n  const [perPage] = useState(12)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [itemsImg, setItemsImg] = useState([])\n  const [isLastPage, setIsLastPage] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [itemLooking, setItemLooking] = useState(null)\n\n  const clearData = () => {\n    setItemsImg([])\n    setCurrentPage(1)\n    setIsLastPage(true)\n    setIsLoading(false)\n  }\n\n  const scrollToRef = (ref) => {\n    const top = ref.current.offsetTop - 80\n    window.scrollTo({ top, behavior: 'smooth' })\n  }\n\n  const onChangeQuery = (val) => {\n    setItemsImg([])\n    setCurrentPage(1)\n    setSearchQuery(val)\n    setIsLoading('true')\n  }\n\n  const onClickMore = () => {\n    setCurrentPage((prevState) => prevState + 1)\n    setIsLoading(true)\n  }\n\n  const onClickImg = (el) => {\n    setItemLooking({ src: el.dataset.src, tags: el.alt })\n  }\n\n  useEffect(() => {\n    if (isLoading && searchQuery) {\n      API.getSearchImages(currentPage, perPage, searchQuery)\n        .then((data) => {\n          if (!data) {\n            clearData()\n            toast.warn('No such results!')\n            return\n          }\n\n          setIsLoading(false)\n          setItemsImg([...itemsImg, ...data.hits])\n          setIsLastPage(\n            currentPage + 1 >= Math.trunc(data.totalHits / perPage) + 1\n              ? true\n              : false,\n          )\n\n          if (myRef.current) {\n            scrollToRef(myRef)\n          }\n        })\n        .catch((error) => {\n          clearData()\n          toast.error(error.message)\n        })\n    }\n  }, [isLoading, searchQuery, currentPage, perPage, itemsImg])\n\n  return (\n    <>\n      <Searchbar onSetQuery={onChangeQuery} />\n      <ImageGallery itemsImg={itemsImg} myRef={myRef} onClickImg={onClickImg} />\n      {isLoading && <Loader />}\n      {searchQuery && !isLastPage && !isLoading && (\n        <Button onClickMore={onClickMore} />\n      )}\n      {itemLooking && (\n        <Modal\n          item={itemLooking}\n          onCloseModal={() => {\n            setItemLooking(null)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n      <ToastContainer theme=\"dark\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}